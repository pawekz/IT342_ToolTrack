name: Docker Image CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: tooltrack.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: tooltrack.azurecr.io/tooltrack-backend:latest

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend_web
          file: ./frontend_web/Dockerfile
          push: true
          tags: tooltrack.azurecr.io/tooltrack-frontend:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Backend Container
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az container create --resource-group tooltrack --name tooltrack-backend --image tooltrack.azurecr.io/tooltrack-backend:latest --dns-name-label tooltrack-backend --ports 8080 --registry-username ${{ secrets.ACR_USERNAME }} --registry-password ${{ secrets.ACR_PASSWORD }} --environment-variables SPRING_PROFILES_ACTIVE=prod --os-type Linux --cpu 1 --memory 1.5

      - name: Deploy Frontend to Web App
        uses: azure/CLI@v1
        with:
          inlineScript: |
            # Configure Web App to use Docker container
            az webapp config container set --name tooltrack-frontend --resource-group tooltrack \
              --container-image-name tooltrack.azurecr.io/tooltrack-frontend:latest \
              --container-registry-url https://tooltrack.azurecr.io \
              --container-registry-user ${{ secrets.ACR_USERNAME }} \
              --container-registry-password ${{ secrets.ACR_PASSWORD }}

            # Configure continuous deployment
            az webapp deployment container config --name tooltrack-frontend --resource-group tooltrack --enable-cd true

            # Set app settings for proper port binding
            az webapp config appsettings set --name tooltrack-frontend --resource-group tooltrack --settings WEBSITES_PORT=4173

            # Set startup command to ensure Vite binds to all network interfaces
            az webapp config set --name tooltrack-frontend --resource-group tooltrack --startup-file "npm run preview -- --host 0.0.0.0"

            # Restart the web app to apply changes
            az webapp restart --name tooltrack-frontend --resource-group tooltrack

      - name: Deploy Backend to Web App
        uses: azure/CLI@v1
        with:
          inlineScript: |
            # Configure Web App to use Docker container
            az webapp config container set --name tooltrack-backend --resource-group tooltrack \
              --container-image-name tooltrack.azurecr.io/tooltrack-backend:latest \
              --container-registry-url https://tooltrack.azurecr.io \
              --container-registry-user ${{ secrets.ACR_USERNAME }} \
              --container-registry-password ${{ secrets.ACR_PASSWORD }}
            
            # Configure continuous deployment
            az webapp deployment container config --name tooltrack-backend --resource-group tooltrack --enable-cd true
            
            # Set database and OAuth environment variables
            az webapp config appsettings set --name tooltrack-backend --resource-group tooltrack --settings \
              MYSQL_DATABASE="tooltrack" \
              MYSQL_USERNAME="yourusername@tooltracksqlserver" \
              MYSQL_PASSWORD="${{ secrets.MYSQL_PASSWORD }}" \
              GOOGLE_CLIENT_ID="${{ secrets.GOOGLE_CLIENT_ID }}" \
              GOOGLE_CLIENT_SECRET="${{ secrets.GOOGLE_CLIENT_SECRET }}" \
              WEBSITES_PORT=8080
            
            # Restart the web app to apply changes
            az webapp restart --name tooltrack-backend --resource-group tooltrack      

      - name: Get Backend URL
        id: get-backend-url
        uses: azure/CLI@v1
        with:
          inlineScript: |
            FQDN=$(az container show --resource-group tooltrack --name tooltrack-backend --query ipAddress.fqdn -o tsv)
            echo "backend_url=http://$FQDN:8080" >> $GITHUB_OUTPUT

      - name: Get Frontend URL
        id: get-frontend-url
        uses: azure/CLI@v1
        with:
          inlineScript: |
            FQDN=$(az webapp show --name tooltrack-frontend --resource-group tooltrack --query defaultHostName -o tsv)
            echo "frontend_url=https://$FQDN" >> $GITHUB_OUTPUT

      - name: Output URLs
        run: |
          echo "Backend is now accessible at ${{ steps.get-backend-url.outputs.backend_url }}"
          echo "Frontend is now accessible at ${{ steps.get-frontend-url.outputs.frontend_url }}"