name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  #pull_request: disabled, assume that it is working
    #branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    #steps:
    #- uses: actions/checkout@v4
    #- name: Build the Docker image
      #run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASS }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        file: ./backend/DockerfileBackend
        push: true
        tags: ${{ secrets.DOCKER_USER }}/tooltrack-backend:latest


    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.ECR_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.ECR_SECRET_KEY }}
        aws-region: ap-southeast-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Automatic Tagging of Releases
    id: increment-git-tag
    run: |
      bash ./build/git_update.sh -v major

    - name: Build, Tag, and Push the Image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: academic/tooltrack
        IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
